Организация этого документа:

Документ разделен на пять глав, большинство из которых предназначены для самостоятельного чтения в соответствии с на ваш уровень интереса:

1. "Обзор"(эта глава). Прочтите эту главу для введения.
2. "Общая архитектура", в которой мы описываем архитектуру и общий дизайн AMQP. Этот глава предназначена для того, чтобы помочь системным архитекторам понять, как работает AMQP.
3. "Функциональные спецификации", в которых мы определяем, как приложения работают с AMQP. Эта глава состоит из удобочитаемого обсуждения, за которым следует подробное описание каждой команды протокола, предназначен в качестве справочного материала для разработчиков. Перед чтением этой главы вы должны прочитать Общие Архитектура.
4. "Технические спецификации", в которых мы определяем, как работает транспортный уровень AMQP. Эта глава состоит из краткого обсуждения, за которым следует подробное описание конструкций на уровне проводов, предназначенных для в качестве справочника для разработчиков. Вы можете прочитать эту главу отдельно, если хотите понять, как протокол проводного уровня работает (но не то, для чего он используется).

Условные обозначения
Рекомендации для разработчиков
Техническая терминология
эти термины имеют особое значение в контексте этого документа:
 - AMQP command architecture: Закодированная команда протокола проводного уровня, которая выполняет действия на состояние архитектуры модели AMQ.
 - AMQ model architecture: Логическая структура, представляющая ключевые сущности и семантику, которые должен быть доступен с помощью реализации сервера, совместимого с AMQP, чтобы состояние сервера могло манипулировать клиентом для достижения семантики, определенной в этой спецификации.
 - Connection: Сетевое соединение, например соединение сокета TCP / IP 
 - Channel: Двунаправленный поток связи между двумя партнерами AMQP. Каналы мультиплексированы, так что одно сетевое соединение может передавать несколько каналов.
 - Client: Инициатор соединения или канала AMQP. AMQP не симметричен. Клиенты производят и потребляют сообщения, пока серверы ставят в очередь и маршрутизируют сообщения.
 - Server: Процесс, который принимает клиентские соединения и реализует очередь сообщений AMQP и функции маршрутизации. Также известен как «брокер».
 - Perr: Любая сторона в соединении AMQP. В соединении AMQP участвуют ровно два одноранговых узла (один из них клиент, один - сервер).
 - Frame: формально определенный пакет данных подключения. Фреймы всегда записываются и читаются непрерывно - как единое целое - при соединении.
 - Protocol class: Класс протокола: набор команд AMQP (также известных как методы), которые имеют дело с определенным типом функций. 
 - Method: особый тип командного кадра AMQP, который передает инструкции от одного партнера к другому.
 - Content: данные приложения передаются от клиента к серверу и от сервера к клиенту. Этот термин является синонимом слова «Message».
 - Content header: конкретный тип фрейма, который описывает свойства содержимого.
 - Content body: конкретный тип фрейма, который содержит необработанные данные приложения. Фреймы тела содержимого полностью непрозрачны - сервер никоим образом не проверяет и не изменяет их.
 - Message: синоним слова «Content».
 - Exchange: объект на сервере, который получает сообщения от приложений-производителей и дополнительно направляет их в очереди сообщений на сервере.
 - Exchange type: алгоритм и реализация конкретной модели обмена. В отличие от «exchange instance», который представляет собой объект, который получает и направляет сообщения на сервере.
 - Message queue: именованный объект, который хранит сообщения и пересылает их в потребительские приложения. 
 
  
 Общая архитектура
 2.1 Архитектура модели AMQ
 В этом разделе объясняется семантика сервера, которая должна быть стандартизирована, чтобы гарантировать совместимость между реализациями AMQP.